@import "./variables.scss";

@mixin flex(
  $align-items: center,
  $justify-content: center,
  $flex-direction: row
) {
  display: flex;
  flex-direction: $flex-direction;
  align-items: $align-items;
  justify-content: $justify-content;
}

@mixin font-properties(
  $font-family: $font-secondary,
  $font-size: $font-size-sm,
  $color: $color-light,
  $font-weight: $font-weight-regular
) {
  font-family: $font-family;
  font-size: $font-size;
  color: $color;
  font-weight: $font-weight;
}

@mixin size($width: auto, $height: auto) {
  width: $width;
  height: $height;
}

@mixin color($background: auto, $font: auto) {
  background-color: $background;
  color: $font;
}

@mixin grid-position(
  $grid-row-start,
  $grid-row-end,
  $grid-column-start,
  $grid-column-end
) {
  grid-row-start: $grid-row-start;
  grid-row-end: $grid-row-end;
  grid-column-start: $grid-column-start;
  grid-column-end: $grid-column-end;
}

@mixin respond($breakpoint) {
  @if $breakpoint == "desktop" {
    @media (min-width: 1024px) {
      @content;
    }
  } @else if $breakpoint == "big-desktop" {
    @media (min-width: 1921px) {
      @content;
    }
  } @else if $breakpoint == "vertical-screen" {
    @media (max-width: 760px) and (orientation: portrait) {
      @content;
    }
  } @else if $breakpoint == "vertical-small-screen" {
    @media (max-width: 510px) and (orientation: portrait) {
      @content;
    }
  } @else if $breakpoint == "horizontal-screen" {
    @media (max-width: 1023px) and (orientation: landscape) {
      @content;
    }
  }
}

@mixin border-radius(
  $top-left: 0,
  $top-right: null,
  $bottom-right: null,
  $bottom-left: null
) {
  $top-right: if($top-right == null, $top-left, $top-right);
  $bottom-right: if($bottom-right == null, $top-left, $bottom-right);
  $bottom-left: if($bottom-left == null, $top-left, $bottom-left);

  border-radius: $top-left $top-right $bottom-right $bottom-left;
}
